{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressKey","document","addEventListener","event","key","setState","this","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAyB,CACvBC,SAAU,2BAFd,uDAKE,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,SAAS,SAACC,GAC9BA,EAAMC,KACR,EAAKC,SAAS,CAAEL,SAAS,4BAAD,OAA8BG,EAAMC,IAApC,YARhC,kCAaE,WAAwB,IAAD,OACrBH,SAASC,iBAAiB,SAAS,SAACC,GAC9BA,EAAMC,KACR,EAAKC,SAAS,CAAEL,SAAUG,EAAMC,WAhBxC,oBAqBE,WACE,IAAQJ,EAAaM,KAAKP,MAAlBC,SAER,OACE,qBAAKO,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACIP,UA3BZ,GAAyBQ,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.9b3f61db.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressKey: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    pressKey: 'Nothing was pressed yet',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', (event: KeyboardEvent) => {\n      if (event.key) {\n        this.setState({ pressKey: `The last pressed key is [${event.key}]` });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    document.addEventListener('keyup', (event: KeyboardEvent) => {\n      if (event.key) {\n        this.setState({ pressKey: event.key });\n      }\n    });\n  }\n\n  render() {\n    const { pressKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          { pressKey }\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}