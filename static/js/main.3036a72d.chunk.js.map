{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressKey","handleKeyPress","event","setState","key","document","addEventListener","this","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAyB,CACvBC,SAAU,2BAFd,EAaEC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEH,SAAS,4BAAD,OAA8BE,EAAME,IAApC,QAd5B,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,kBAN5C,kCASE,WACEI,SAASC,iBAAiB,QAASC,KAAKN,kBAV5C,oBAiBE,WACE,IAAQD,EAAaO,KAAKR,MAAlBC,SAER,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACIR,UAvBZ,GAAyBS,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAN,SAASO,eAAe,W","file":"static/js/main.3036a72d.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressKey: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    pressKey: 'Nothing was pressed yet',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyPress);\n  }\n\n  componentWillUnmount() {\n    document.addEventListener('keyup', this.handleKeyPress);\n  }\n\n  handleKeyPress = (event: KeyboardEvent) => {\n    this.setState({ pressKey: `The last pressed key is [${event.key}]` });\n  };\n\n  render() {\n    const { pressKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          { pressKey }\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}